//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан по шаблону.
//
//     Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//     Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Learn
{
    using System;
    using System.Collections.Generic;
    using System.Windows.Media;

    public partial class Service
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public Service()
        {
            this.ClientService = new HashSet<ClientService>();
            this.ServicePhoto = new HashSet<ServicePhoto>();
        }
    
        public int ID { get; set; }
        public string Title { get; set; }
        public decimal Cost { get; set; }
        public int DurationInSeconds { get; set; }
        public string Description { get; set; }
        public Nullable<double> Discount { get; set; }
        public string MainImagePath { get; set; }

        public string LogoCheck
        {
            get
            {
                return $"\\{MainImagePath}";
            }
        }

        public Nullable<decimal> CostPosleScidke
        {
            get
            {
                if (Discount ==0)
                    return null;
                else
                    return  (Cost - Cost * (decimal)Discount / 100);
            }
        }

        public Nullable<decimal> CostDoSkidki
        {
            get
            {
                if (Discount == 0)
                    return null ;
                else
                    return Cost;
            }
        }


        public  SolidColorBrush Style
        {
            get
            {
                BrushConverter bc = new BrushConverter();
                SolidColorBrush brush;
                double disc = Discount.Value;
             

                if (disc > 0)
                {
                    brush = (SolidColorBrush)bc.ConvertFrom("#E7FABF");
                    return brush;
                }
                else
                {
                    brush = (SolidColorBrush)bc.ConvertFrom("#FFFFFF");
                    return brush;
                }
            }
        }

        public Nullable<decimal> Cost1
        {
            get
            {
                if (Discount ==0)
                    return Cost;
                else
                    return null;
            }
        }

        public int VremaVMinutax
        {
            get
            {
                return DurationInSeconds / 60;
            }
        }

        public string Skidka
        {
            get
            {
                if (Discount is null)
                    return null;
                else
                    return $"*скидка {Discount*100}%";
            }
        }

        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<ClientService> ClientService { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<ServicePhoto> ServicePhoto { get; set; }
    }
}
